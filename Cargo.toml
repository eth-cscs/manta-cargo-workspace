[workspace]
members = ["manta-backend-dispatcher", "manta-ws", "ochami-rs", "manta", "mesa"]
resolver = "2"

[workspace.dependencies]
manta-backend-dispatcher = { path = "manta-backend-dispatcher" } 
#ochami-rs = { version = "0.1.71" }
ochami-rs = { path = "ochami-rs" }
#mesa =  { version = "0.5.0-beta.1" }
mesa =  { path = "mesa" }
manta-ws = { path = "manta-ws" }

base64 = { version = "0.22.1" }
chrono = { version = "0.4.41" }
comfy-table = { version = "7.1.4" }
config = { version = "0.15.11", features = ["toml"] } # used to read manta configuration file
dialoguer = { version = "0.11.0" }
directories = { version = "6.0.0" } # XDG Base Directory Specification
futures = { version = "0.3.28" }
futures-channel = { version = "0.3.31" }
futures-io = { version = "0.3.31" }
git2 = { version = "0.20.2" }
hostlist-parser = { version = "0.1.6" }
humansize = { version = "2.1.3" }
hyper = { version = "1.6.0" }
k8s-openapi = { version = "0.20.0" }
kube = { version = "0.87.2" }
log = "0.4.27"
log4rs = "1.2.0" # Docs about pattern encoder https://docs.rs/log4rs/0.10.0/log4rs/encode/pattern/index.html
md5 = "0.7.0"
regex = "1.11.1"
reqwest = { version = "0.12.15", default-features = false, features = ["rustls-tls", "json"] }
rdkafka = { version = "0.37", features = ["cmake-build"] }
serde_json = "1.0.140"
serde = { version = "1.0.219" }
serde_yaml = "0.9.34" # TODO: deprecated, need to replace, potential candidate: yaml-rust2
strum_macros = "0.27.1"
strum = { version = "0.27.1", default-features = false }
thiserror = "2.0.12"
tokio = { version = "1.45.0" }
tokio-util = { version = "0.7.5" }
tower = { version = "0.5.2" }
tracing = { version = "0.1.41" }
tracing-subscriber = { version = "0.3.19" }
utoipa = { version = "5.3.1" }
uuid = { version = "1.16.0" }


# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.0.7"
# The preferred Rust toolchain to use in CI (rustup toolchain syntax)
rust-toolchain-version = "1.67.1"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu"]
# CI backends to support (see 'cargo dist generate-ci')
ci = ["github"]
# The installers to generate for each app
installers = []
# Whether to consider the binaries in a package for distribution (defaults true)
dist = true

[profile.dev]
incremental = true

[profile.release]
opt-level = 'z'     # Optimize for size
lto = true          # Enable link-time optimization
codegen-units = 1   # Reduce number of codegen units to increase optimizations
panic = 'abort'     # Abort on panic
strip = true        # Strip symbols from binary*

